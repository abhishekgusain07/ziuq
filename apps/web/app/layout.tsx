import type { Metadata } from "next";
import localFont from "next/font/local";
import "./globals.css";
import { ThemeScript } from "./components/theme-script";
import { ThemeProvider } from "./components/theme-provider";

const geistSans = localFont({
  src: "./fonts/GeistVF.woff",
  variable: "--font-geist-sans",
});
const geistMono = localFont({
  src: "./fonts/GeistMonoVF.woff",
  variable: "--font-geist-mono",
});

// Script to prevent flash of unstyled content
function ThemeInitScript() {
  return (
    <script
      dangerouslySetInnerHTML={{
        __html: `
          (function() {
            const prefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;
            const storedTheme = localStorage.getItem('freddie-portfolio-theme');
            const theme = storedTheme || (prefersDark ? 'dark' : 'light');
            
            // Make sure to remove any existing theme class first
            document.documentElement.classList.remove('light', 'dark');
            document.documentElement.classList.add(theme);
            document.documentElement.style.colorScheme = theme;
          })()
        `,
      }}
    />
  );
}
export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en" suppressHydrationWarning className="light">
      <head>
        <ThemeInitScript />
      </head>
      <body className={`${geistSans.variable} ${geistMono.variable} selection:bg-neutral-3 selection:text-neutral-8 bg-white dark:bg-black text-black dark:text-white transition-colors duration-300`}>
      <ThemeProvider
          attribute="class"
          defaultTheme="system"
          enableSystem
          disableTransitionOnChange={false}
        >
          <ThemeScript />
          {children}
        </ThemeProvider>
      </body>
    </html>
  );
}
